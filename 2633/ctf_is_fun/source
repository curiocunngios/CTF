
program:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    rsp,0x8
    1004:	48 8b 05 c5 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fc5]        # 3fd0 <__gmon_start__@Base>
    100b:	48 85 c0             	test   rax,rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   rax
    1012:	48 83 c4 08          	add    rsp,0x8
    1016:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   QWORD PTR [rip+0x2fca]        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    QWORD PTR [rip+0x2fcc]        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <puts@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    QWORD PTR [rip+0x2fca]        # 4000 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <__isoc99_scanf@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    QWORD PTR [rip+0x2fc2]        # 4008 <__isoc99_scanf@GLIBC_2.7>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	ff 25 8a 2f 00 00    	jmp    QWORD PTR [rip+0x2f8a]        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1056:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	31 ed                	xor    ebp,ebp
    1062:	49 89 d1             	mov    r9,rdx
    1065:	5e                   	pop    rsi
    1066:	48 89 e2             	mov    rdx,rsp
    1069:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    106d:	50                   	push   rax
    106e:	54                   	push   rsp
    106f:	45 31 c0             	xor    r8d,r8d
    1072:	31 c9                	xor    ecx,ecx
    1074:	48 8d 3d ce 00 00 00 	lea    rdi,[rip+0xce]        # 1149 <main>
    107b:	ff 15 3f 2f 00 00    	call   QWORD PTR [rip+0x2f3f]        # 3fc0 <__libc_start_main@GLIBC_2.34>
    1081:	f4                   	hlt
    1082:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1089:	00 00 00 
    108c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 89 2f 00 00 	lea    rdi,[rip+0x2f89]        # 4020 <__TMC_END__>
    1097:	48 8d 05 82 2f 00 00 	lea    rax,[rip+0x2f82]        # 4020 <__TMC_END__>
    109e:	48 39 f8             	cmp    rax,rdi
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 1e 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f1e]        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10aa:	48 85 c0             	test   rax,rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmp    rax
    10b1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    10b8:	c3                   	ret
    10b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 59 2f 00 00 	lea    rdi,[rip+0x2f59]        # 4020 <__TMC_END__>
    10c7:	48 8d 35 52 2f 00 00 	lea    rsi,[rip+0x2f52]        # 4020 <__TMC_END__>
    10ce:	48 29 fe             	sub    rsi,rdi
    10d1:	48 89 f0             	mov    rax,rsi
    10d4:	48 c1 ee 3f          	shr    rsi,0x3f
    10d8:	48 c1 f8 03          	sar    rax,0x3
    10dc:	48 01 c6             	add    rsi,rax
    10df:	48 d1 fe             	sar    rsi,1
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 ed 2e 00 00 	mov    rax,QWORD PTR [rip+0x2eed]        # 3fd8 <_ITM_registerTMCloneTable@Base>
    10eb:	48 85 c0             	test   rax,rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmp    rax
    10f2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    10f8:	c3                   	ret
    10f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64
    1104:	80 3d 15 2f 00 00 00 	cmp    BYTE PTR [rip+0x2f15],0x0        # 4020 <__TMC_END__>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   rbp
    110e:	48 83 3d ca 2e 00 00 	cmp    QWORD PTR [rip+0x2eca],0x0        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    rbp,rsp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d f6 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2ef6]        # 4018 <__dso_handle>
    1122:	e8 29 ff ff ff       	call   1050 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	call   1090 <deregister_tm_clones>
    112c:	c6 05 ed 2e 00 00 01 	mov    BYTE PTR [rip+0x2eed],0x1        # 4020 <__TMC_END__>
    1133:	5d                   	pop    rbp
    1134:	c3                   	ret
    1135:	0f 1f 00             	nop    DWORD PTR [rax]
    1138:	c3                   	ret
    1139:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64
    1144:	e9 77 ff ff ff       	jmp    10c0 <register_tm_clones>

0000000000001149 <main>:
    1149:	55                   	push   rbp          # function prologue
    114a:	48 89 e5             	mov    rbp,rsp      # function prologue
    114d:	48 83 ec 40          	sub    rsp,0x40     # allocate 64 bytes on stack 
    1151:	48 8d 05 d0 2e 00 00 	lea    rax,[rip+0x2ed0]        # 4028 <input.0>                          
    1158:	48 89 c6             	mov    rsi,rax      # <input.0> (what is this?) goes into rsi
     115b:	48 8d 05 a2 0e 00 00 	lea    rax,[rip+0xea2]        # 2004 <_IO_stdin_used+0x4>
    1162:	48 89 c7             	mov    rdi,rax      # <_IO_stdin_used+0x4> (?) goes in rdi
    1165:	b8 00 00 00 00       	mov    eax,0x0      #  zero out lower 32 bit of rax
    116a:	e8 d1 fe ff ff       	call   1040 <__isoc99_scanf@plt>    # calls scanf with rdi as 1st argument and rsi as 2nd argument
    116f:	48 8d 05 b2 2e 00 00 	lea    rax,[rip+0x2eb2]        # 4028 <input.0>
    1176:	48 89 c6             	mov    rsi,rax
    1179:	48 8d 05 88 0e 00 00 	lea    rax,[rip+0xe88]        # 2008 <_IO_stdin_used+0x8>
    1180:	48 89 c7             	mov    rdi,rax
    1183:	b8 00 00 00 00       	mov    eax,0x0
    1188:	e8 b3 fe ff ff       	call   1040 <__isoc99_scanf@plt>
    118d:	48 8b 05 94 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e94]        # 4028 <input.0>
    1194:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1198:	48 b8 3f e5 5a 6e 42 	movabs rax,0x29c4e0426e5ae53f
    119f:	e0 c4 29 
    11a2:	48 31 45 f8          	xor    QWORD PTR [rbp-0x8],rax
    11a6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    11aa:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    11ae:	c7 45 cc 20 00 00 00 	mov    DWORD PTR [rbp-0x34],0x20
    11b5:	83 65 cc 3f          	and    DWORD PTR [rbp-0x34],0x3f
    11b9:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
    11bc:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
    11c0:	89 c1                	mov    ecx,eax
    11c2:	48 d3 c2             	rol    rdx,cl
    11c5:	48 89 d0             	mov    rax,rdx
    11c8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    11cc:	48 b8 58 c1 7b a1 b7 	movabs rax,0xbf272eb7a17bc158
    11d3:	2e 27 bf 
    11d6:	48 01 45 f8          	add    QWORD PTR [rbp-0x8],rax
    11da:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    11de:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
    11e2:	c7 45 dc 20 00 00 00 	mov    DWORD PTR [rbp-0x24],0x20
    11e9:	83 65 dc 3f          	and    DWORD PTR [rbp-0x24],0x3f
    11ed:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
    11f0:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    11f4:	89 c1                	mov    ecx,eax
    11f6:	48 d3 c2             	rol    rdx,cl
    11f9:	48 89 d0             	mov    rax,rdx
    11fc:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1200:	48 b8 39 a7 0a 15 56 	movabs rax,0x7204bb56150aa739
    1207:	bb 04 72 
    120a:	48 01 45 f8          	add    QWORD PTR [rbp-0x8],rax
    120e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1212:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    1216:	c7 45 ec 20 00 00 00 	mov    DWORD PTR [rbp-0x14],0x20
    121d:	83 65 ec 3f          	and    DWORD PTR [rbp-0x14],0x3f
    1221:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    1224:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
    1228:	89 c1                	mov    ecx,eax
    122a:	48 d3 c2             	rol    rdx,cl
    122d:	48 89 d0             	mov    rax,rdx
    1230:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1234:	48 b8 99 e7 be c3 d9 	movabs rax,0xd5912ad9c3bee799
    123b:	2a 91 d5 
    123e:	48 31 45 f8          	xor    QWORD PTR [rbp-0x8],rax
    1242:	48 b8 b5 d5 8a 53 93 	movabs rax,0xd0f7ac93538ad5b5
    1249:	ac f7 d0 
    124c:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
    1250:	75 16                	jne    1268 <main+0x11f>
    1252:	48 8d 05 b3 0d 00 00 	lea    rax,[rip+0xdb3]        # 200c <_IO_stdin_used+0xc>
    1259:	48 89 c7             	mov    rdi,rax
    125c:	e8 cf fd ff ff       	call   1030 <puts@plt>
    1261:	b8 00 00 00 00       	mov    eax,0x0
    1266:	eb 14                	jmp    127c <main+0x133>
    1268:	48 8d 05 a0 0d 00 00 	lea    rax,[rip+0xda0]        # 200f <_IO_stdin_used+0xf>
    126f:	48 89 c7             	mov    rdi,rax
    1272:	e8 b9 fd ff ff       	call   1030 <puts@plt>
    1277:	b8 00 00 00 00       	mov    eax,0x0
    127c:	c9                   	leave
    127d:	c3                   	ret

Disassembly of section .fini:

0000000000001280 <_fini>:
    1280:	48 83 ec 08          	sub    rsp,0x8
    1284:	48 83 c4 08          	add    rsp,0x8
    1288:	c3                   	ret
